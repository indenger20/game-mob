{"version":3,"sources":["node_modules/browser-pack/_prelude.js","js/index.js","js/model.js","js/presenter.js","js/static/DOMmethods.js","js/static/eventObj.js","js/view.js"],"names":[],"mappings":"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","file":"build.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\r\nlet View = require('./view');\r\nlet DOMmethods = require('./static/DOMmethods');\r\nlet Presenter = require('./presenter');\r\n\r\nlet myGame = new Presenter(new View());\r\n\r\nmyGame.newGame();\r\n\r\nDOMmethods.getId('btn').addEventListener('click', function(e) {\r\n    myGame.reset();\r\n    console.log(myGame)\r\n    e.preventDefault()\r\n})","let eventObj = require('./static/eventObj');\r\n\r\nfunction randomNumbers(a, b) {\r\n    return Math.random() - 0.5;\r\n};\r\n\r\n\r\nfunction mixImages(array) {\r\n    let counter = array.length;\r\n\r\n    // While there are elements in the array\r\n    while (counter > 0) {\r\n        // Pick a random index\r\n        let index = Math.floor(Math.random() * counter);\r\n\r\n        // Decrease counter by 1\r\n        counter--;\r\n\r\n        // And swap the last element with it\r\n        let temp = array[counter];\r\n        array[counter] = array[index];\r\n        array[index] = temp;\r\n    }\r\n\r\n    return array;\r\n}\r\n\r\nmodule.exports = {\r\n    data: [],\r\n    getSize() {\r\n        return new Promise((resolve, reject)=> {\r\n            eventObj.ajaxGet('https://kde.link/test/get_field_size.php', function(data) {\r\n                resolve(data);\r\n            })\r\n        })\r\n    },\r\n    getImages() {\r\n        var imagePath = [];\r\n        for(var i = 0; i<10; i++) {\r\n            imagePath.push('https://kde.link/test/'+ i +'.png');\r\n        }\r\n        return imagePath;\r\n    },\r\n    getMixArr(width, height) {\r\n        let allImg = this.getImages(),\r\n            newArr = [],\r\n            counter = 0;\r\n\r\n        for(let i = 0; i < width*height/2; i++) {\r\n            if( !allImg[counter] ) {\r\n                counter = 0;\r\n                newArr.push(allImg[counter]);\r\n                continue;\r\n            }\r\n            if ( allImg[counter] ) {\r\n                newArr.push(allImg[counter]);\r\n                counter++;\r\n            }\r\n        };\r\n        return mixImages(newArr);\r\n    },\r\n    saveData(width, height) {\r\n        let firstArr = this.getMixArr(width,height);\r\n        let secondArr = mixImages( firstArr.slice() );\r\n\r\n        this.data = firstArr.concat(secondArr);\r\n    },\r\n    getData(index) {\r\n        //let x = 0;\r\n        return this.data;\r\n    },\r\n    getImgToIndex(index) {\r\n        return this.data[index - 1];\r\n    },\r\n    isCheck(index1, index2) {\r\n        if( index1 == index2 ) {\r\n            return false;\r\n        }else if( this.getImgToIndex(index1) === this.getImgToIndex(index2) ) {\r\n            return true;\r\n        }else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n}","let eventObj = require('./static/eventObj');\r\nlet DOMmethods = require('./static/DOMmethods');\r\nlet model = require('./model');\r\n\r\n\r\nmodule.exports = function (view) {\r\n    let thet = this;\r\n\r\n    view.on('firstOpen', function( target, index ) {\r\n\r\n        //console.log(index);\r\n        let thisImg = model.getImgToIndex(index);\r\n        view.openImg(target, thisImg);\r\n\r\n\r\n    });\r\n\r\n    view.on('doubleOpen', function( target, index, prevIndex ) {\r\n\r\n        let thisImg = model.getImgToIndex(index);\r\n        let isCheck = model.isCheck(index, prevIndex);\r\n        view.openImg(target, thisImg);\r\n        if(isCheck) {\r\n            view.blockedImg(index, prevIndex);\r\n        }else {\r\n            view.disableEvent();\r\n            setTimeout(function () {\r\n                view.closeImg();\r\n                view.enableEvent();\r\n            }, 500);\r\n        }\r\n\r\n    });\r\n\r\n    view.on('finish', function() {\r\n        thet.resetGame();\r\n    });\r\n\r\n    this.resetGame = function() {\r\n        view.removeGame();\r\n        thet.newGame();\r\n    }\r\n\r\n    this.newGame = function() {\r\n        model.getSize().then((data)=> {\r\n            let width = data.width <= 8 ? data.width : 8,\r\n            height = data.height <= 8 ? data.height: 8;\r\n\r\n            width = 2;\r\n            height = 2;\r\n\r\n            view.render(width, height);\r\n            model.saveData(width, height);\r\n\r\n        });\r\n    }\r\n\r\n    return {\r\n        newGame: this.newGame,\r\n        reset: this.resetGame\r\n    }\r\n\r\n\r\n}","let eventObj = require('./eventObj');\r\nmodule.exports =  {\r\n    getId(id) {\r\n        return document.getElementById(id)\r\n    },\r\n\r\n    getTag(tag) {\r\n        return document.getElementsByTagName(tag)\r\n    },\r\n\r\n    getAttr(event, attr) {\r\n        let target = eventObj.getTarget(event);\r\n        let data = target.getAttribute(attr);\r\n\r\n        return data;\r\n    },\r\n\r\n    getName(name) {\r\n        return document.getElementsByName(name);\r\n    },\r\n\r\n    getClass(className) {\r\n        return document.getElementsByClassName(className)\r\n    },\r\n\r\n    getStyle(id) {\r\n        this.getId(id);\r\n        return window.getComputedStyle(this.getId(id))\r\n    },\r\n\r\n    addClass(id, className) {\r\n        var e = this.getId(id);\r\n        return e.classList.add(className);\r\n    },\r\n\r\n    removeClass(id, className) {\r\n        var e = this.getId(id);\r\n        return e.classList.remove(className);\r\n    }\r\n}","module.exports = {\r\n    addEvent: function (e, type, fn) {\r\n        if (typeof addEventListener !== 'undefined') {\r\n            e.addEventListener(type, fn, false);\r\n        } else if (typeof attachEvent !== 'undefined') {\r\n            e.attachEvent('on' + type, fn);\r\n        } else {\r\n            e['on' + type] = fn;\r\n        }\r\n    },\r\n\r\n    removeEvent: function (e, type, fn) {\r\n        if (typeof removeEventListener !== 'undefined') {\r\n            e.removeEventListener(type, fn, false);\r\n        } else if (typeof attachEvent !== 'undefined') {\r\n            e.detachEvent('on' + type, fn);\r\n        } else {\r\n            e['on' + type] = null;\r\n        }\r\n    },\r\n\r\n    getTarget: function (event) {\r\n        var event = window.event || event;\r\n        if (typeof event.target !== 'undefined') {\r\n            return event.target;\r\n        } else {\r\n            return evt.srcElement;\r\n        }\r\n    },\r\n\r\n    preventDefault: function (event) {\r\n        if (typeof event.preventDefault !== 'undefined') {\r\n            event.preventDefault();\r\n        } else {\r\n            event.returnValue = false;\r\n        }\r\n    },\r\n\r\n    ajaxGet: function (url, callback) {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET', url);\r\n        xhr.onreadystatechange = function(){\r\n            if (this.readyState == 4) {\r\n                if (this.status == 200)\r\n                    callback(JSON.parse(this.responseText));\r\n                // иначе сетевая ошибка\r\n            }\r\n        };\r\n        xhr.send(null);\r\n    }\r\n}","let eventObj = require('./static/eventObj');\r\nlet DOMmethods = require('./static/DOMmethods');\r\n\r\nclass View {\r\n    constructor() {\r\n        let thet = this;\r\n        let flag = false;\r\n        this.allLinks = null;\r\n\r\n        this.handlers = {};\r\n\r\n        this.onHandle = function(e = window.event) {\r\n            let $this = e.target;\r\n\r\n            if( $this.dataset.id ) {\r\n                let index = $this.dataset.id ? $this.dataset.id : null;\r\n\r\n                if(index) {\r\n                    let flag = index ? $this.classList.contains('active') : null;\r\n                    let firstOpen = thet.checkAllActive('active', thet.getAvailableLinks());\r\n\r\n                    if(!firstOpen && !flag) {\r\n                        thet.trigger('firstOpen', e.target, index);\r\n                    }else if( firstOpen && !flag ) {\r\n                        thet.trigger('doubleOpen', e.target, index, firstOpen);\r\n                    }\r\n                }\r\n\r\n                let closedElems = thet.getAvailableLinks();\r\n                if(!closedElems.length) {\r\n                    thet.trigger('finish');\r\n                }\r\n            }\r\n        }\r\n\r\n        this.offHandle = function(e = window.event) {\r\n            e.preventDefault();\r\n        }\r\n\r\n        DOMmethods.getId('container').addEventListener('click', this.onHandle, true);\r\n    }\r\n\r\n    render(width, height) {\r\n        let list = document.createElement('ul');\r\n        list.classList.add('game-app__list');\r\n        let counter = 0;\r\n        for(let i = 0; i < height; i++) {\r\n            let row = document.createElement('div');\r\n            for(var j = 0; j < width; j++) {\r\n                counter++;\r\n                let item = document.createElement('li');\r\n                let btn = document.createElement('div');\r\n                let img = document.createElement('img');\r\n\r\n                item.classList.add('game-app__item');\r\n\r\n                btn.classList.add('game-app__link');\r\n                btn.dataset.id = counter;\r\n\r\n                img.classList.add('game-app__img');\r\n                img.src = 'image/default.png';\r\n\r\n                item.style.width = `calc(100%/${width}`;\r\n                btn.appendChild(img);\r\n                item.appendChild(btn);\r\n\r\n                row.classList.add('game-app__row');\r\n                row.append(item);\r\n            }\r\n            list.appendChild(row);\r\n        }\r\n        DOMmethods.getId('container').appendChild(list);\r\n    }\r\n\r\n    on(event, fn) {\r\n        this.handlers[event] = this.handlers[event] || [];\r\n\r\n        if (this.handlers[event].indexOf(fn) === -1) {\r\n            this.handlers[event].push(fn);\r\n        }\r\n    }\r\n\r\n    trigger(event) {\r\n        if (this.handlers[event]) {\r\n            var args = Array.prototype.slice.call(arguments, 1);\r\n\r\n            this.handlers[event].forEach(function(fn) {\r\n                fn.apply(null, args);\r\n            });\r\n        }\r\n    }\r\n\r\n    openImg(target, src, flag) {\r\n        target.children[0].src = src;\r\n        target.classList.add('active');\r\n    }\r\n\r\n    closeImg() {\r\n        let allImg = View.prototype.getAvailableLinks();\r\n        for(let i = 0; i < allImg.length; i++) {\r\n            allImg[i].classList.remove('active');\r\n            allImg[i].children[0].src = 'image/default.png';\r\n        }\r\n    }\r\n\r\n    getAllLinks() {\r\n        return DOMmethods.getClass('game-app__link');\r\n    }\r\n\r\n    getAvailableLinks() {\r\n        let allElems = DOMmethods.getClass('game-app__link');\r\n        let filterElems = [];\r\n        for(let i = 0; i < allElems.length; i++) {\r\n            if( !allElems[i].classList.contains('isClose') ) {\r\n                filterElems.push(allElems[i]);\r\n            }\r\n        }\r\n        return filterElems;\r\n    }\r\n\r\n    checkAllActive(className, elems) {\r\n        let res = false;\r\n        for(let el of elems) {\r\n           if(el.classList.contains(className)) {\r\n               res = el.dataset.id;\r\n               break;\r\n           }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    blockedImg(firstIndex, secondIndex) {\r\n        let allBlocks = View.prototype.getAllLinks();\r\n        for(let i = 0; i < allBlocks.length; i++) {\r\n            if( allBlocks[i].dataset.id == firstIndex || allBlocks[i].dataset.id == secondIndex ) {\r\n                allBlocks[i].classList.add('isClose');\r\n            }\r\n        }\r\n    }\r\n\r\n    removeGame() {\r\n        let elems = DOMmethods.getId('container').children;\r\n        for(let i = 0; i < elems.length; i++) {\r\n            elems[i].remove();\r\n        }\r\n    }\r\n\r\n    disableEvent() {\r\n        console.log(this.onHandle)\r\n        DOMmethods.getId('container').removeEventListener('click', this.onHandle, true);\r\n    }\r\n\r\n    enableEvent() {\r\n        DOMmethods.getId('container').addEventListener('click', this.onHandle, true);\r\n    }\r\n\r\n}\r\n\r\n\r\nmodule.exports = View;"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJqc1xcaW5kZXguanMiLCJqc1xcbW9kZWwuanMiLCJqc1xccHJlc2VudGVyLmpzIiwianNcXHN0YXRpY1xcRE9NbWV0aG9kcy5qcyIsImpzXFxzdGF0aWNcXGV2ZW50T2JqLmpzIiwianNcXHZpZXcuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FDQ0EsSUFBSSxPQUFPLFFBQVEsUUFBUixDQUFYO0FBQ0EsSUFBSSxhQUFhLFFBQVEscUJBQVIsQ0FBakI7QUFDQSxJQUFJLFlBQVksUUFBUSxhQUFSLENBQWhCOztBQUVBLElBQUksU0FBUyxJQUFJLFNBQUosQ0FBYyxJQUFJLElBQUosRUFBZCxDQUFiOztBQUVBLE9BQU8sT0FBUDs7QUFFQSxXQUFXLEtBQVgsQ0FBaUIsS0FBakIsRUFBd0IsZ0JBQXhCLENBQXlDLE9BQXpDLEVBQWtELFVBQVMsQ0FBVCxFQUFZO0FBQzFELFdBQU8sS0FBUDtBQUNBLFlBQVEsR0FBUixDQUFZLE1BQVo7QUFDQSxNQUFFLGNBQUY7QUFDSCxDQUpEOzs7QUNUQSxJQUFJLFdBQVcsUUFBUSxtQkFBUixDQUFmOztBQUVBLFNBQVMsYUFBVCxDQUF1QixDQUF2QixFQUEwQixDQUExQixFQUE2QjtBQUN6QixXQUFPLEtBQUssTUFBTCxLQUFnQixHQUF2QjtBQUNIOztBQUdELFNBQVMsU0FBVCxDQUFtQixLQUFuQixFQUEwQjtBQUN0QixRQUFJLFVBQVUsTUFBTSxNQUFwQjs7QUFFQTtBQUNBLFdBQU8sVUFBVSxDQUFqQixFQUFvQjtBQUNoQjtBQUNBLFlBQUksUUFBUSxLQUFLLEtBQUwsQ0FBVyxLQUFLLE1BQUwsS0FBZ0IsT0FBM0IsQ0FBWjs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsWUFBSSxPQUFPLE1BQU0sT0FBTixDQUFYO0FBQ0EsY0FBTSxPQUFOLElBQWlCLE1BQU0sS0FBTixDQUFqQjtBQUNBLGNBQU0sS0FBTixJQUFlLElBQWY7QUFDSDs7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ZSxXQUFmLEVBQWhCO0FBQ0EsYUFBSSxJQUFJLElBQUksQ0FBWixFQUFlLElBQUksVUFBVSxNQUE3QixFQUFxQyxHQUFyQyxFQUEwQztBQUN0QyxnQkFBSSxVQUFVLENBQVYsRUFBYSxPQUFiLENBQXFCLEVBQXJCLElBQTJCLFVBQTNCLElBQXlDLFVBQVUsQ0FBVixFQUFhLE9BQWIsQ0FBcUIsRUFBckIsSUFBMkIsV0FBeEUsRUFBc0Y7QUFDbEYsMEJBQVUsQ0FBVixFQUFhLFNBQWIsQ0FBdUIsR0FBdkIsQ0FBMkIsU0FBM0I7QUFDSDtBQUNKO0FBQ0o7O0FBRUQsaUJBQWE7QUFDVCxZQUFJLFFBQVEsV0FBVyxLQUFYLENBQWlCLFdBQWpCLEVBQThCLFFBQTFDO0FBQ0EsYUFBSSxJQUFJLElBQUksQ0FBWixFQUFlLElBQUksTUFBTSxNQUF6QixFQUFpQyxHQUFqQyxFQUFzQztBQUNsQyxrQkFBTSxDQUFOLEVBQVMsTUFBVDtBQUNIO0FBQ0o7O0FBRUQsbUJBQWU7QUFDWCxnQkFBUSxHQUFSLENBQVksS0FBSyxRQUFqQjtBQUNBLG1CQUFXLEtBQVgsQ0FBaUIsV0FBakIsRUFBOEIsbUJBQTlCLENBQWtELE9BQWxELEVBQTJELEtBQUssUUFBaEUsRUFBMEUsSUFBMUU7QUFDSDs7QUFFRCxrQkFBYztBQUNWLG1CQUFXLEtBQVgsQ0FBaUIsV0FBakIsRUFBOEIsZ0JBQTlCLENBQStDLE9BQS9DLEVBQXdELEtBQUssUUFBN0QsRUFBdUUsSUFBdkU7QUFDSDs7QUF2Sk07O0FBNEpYLE9BQU8sT0FBUCxHQUFpQixJQUFqQiIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCJcclxubGV0IFZpZXcgPSByZXF1aXJlKCcuL3ZpZXcnKTtcclxubGV0IERPTW1ldGhvZHMgPSByZXF1aXJlKCcuL3N0YXRpYy9ET01tZXRob2RzJyk7XHJcbmxldCBQcmVzZW50ZXIgPSByZXF1aXJlKCcuL3ByZXNlbnRlcicpO1xyXG5cclxubGV0IG15R2FtZSA9IG5ldyBQcmVzZW50ZXIobmV3IFZpZXcoKSk7XHJcblxyXG5teUdhbWUubmV3R2FtZSgpO1xyXG5cclxuRE9NbWV0aG9kcy5nZXRJZCgnYnRuJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbihlKSB7XHJcbiAgICBteUdhbWUucmVzZXQoKTtcclxuICAgIGNvbnNvbGUubG9nKG15R2FtZSlcclxuICAgIGUucHJldmVudERlZmF1bHQoKVxyXG59KSIsImxldCBldmVudE9iaiA9IHJlcXVpcmUoJy4vc3RhdGljL2V2ZW50T2JqJyk7XHJcblxyXG5mdW5jdGlvbiByYW5kb21OdW1iZXJzKGEsIGIpIHtcclxuICAgIHJldHVybiBNYXRoLnJhbmRvbSgpIC0gMC41O1xyXG59O1xyXG5cclxuXHJcbmZ1bmN0aW9uIG1peEltYWdlcyhhcnJheSkge1xyXG4gICAgbGV0IGNvdW50ZXIgPSBhcnJheS5sZW5ndGg7XHJcblxyXG4gICAgLy8gV2hpbGUgdGhlcmUgYXJlIGVsZW1lbnRzIGluIHRoZSBhcnJheVxyXG4gICAgd2hpbGUgKGNvdW50ZXIgPiAwKSB7XHJcbiAgICAgICAgLy8gUGljayBhIHJhbmRvbSBpbmRleFxyXG4gICAgICAgIGxldCBpbmRleCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGNvdW50ZXIpO1xyXG5cclxuICAgICAgICAvLyBEZWNyZWFzZSBjb3VudGVyIGJ5IDFcclxuICAgICAgICBjb3VudGVyLS07XHJcblxyXG4gICAgICAgIC8vIEFuZCBzd2FwIHRoZSBsYXN0IGVsZW1lbnQgd2l0aCBpdFxyXG4gICAgICAgIGxldCB0ZW1wID0gYXJyYXlbY291bnRlcl07XHJcbiAgICAgICAgYXJyYXlbY291bnRlcl0gPSBhcnJheVtpbmRleF07XHJcbiAgICAgICAgYXJyYXlbaW5kZXhdID0gdGVtcDtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gYXJyYXk7XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG4gICAgZGF0YTogW10sXHJcbiAgICBnZXRTaXplKCkge1xyXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KT0+IHtcclxuICAgICAgICAgICAgZXZlbnRPYmouYWpheEdldCgnaHR0cHM6Ly9rZGUubGluay90ZXN0L2dldF9maWVsZF9zaXplLnBocCcsIGZ1bmN0aW9uKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgIHJlc29sdmUoZGF0YSk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSlcclxuICAgIH0sXHJcbiAgICBnZXRJbWFnZXMoKSB7XHJcbiAgICAgICAgdmFyIGltYWdlUGF0aCA9IFtdO1xyXG4gICAgICAgIGZvcih2YXIgaSA9IDA7IGk8MTA7IGkrKykge1xyXG4gICAgICAgICAgICBpbWFnZVBhdGgucHVzaCgnaHR0cHM6Ly9rZGUubGluay90ZXN0LycrIGkgKycucG5nJyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBpbWFnZVBhdGg7XHJcbiAgICB9LFxyXG4gICAgZ2V0TWl4QXJyKHdpZHRoLCBoZWlnaHQpIHtcclxuICAgICAgICBsZXQgYWxsSW1nID0gdGhpcy5nZXRJbWFnZXMoKSxcclxuICAgICAgICAgICAgbmV3QXJyID0gW10sXHJcbiAgICAgICAgICAgIGNvdW50ZXIgPSAwO1xyXG5cclxuICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgd2lkdGgqaGVpZ2h0LzI7IGkrKykge1xyXG4gICAgICAgICAgICBpZiggIWFsbEltZ1tjb3VudGVyXSApIHtcclxuICAgICAgICAgICAgICAgIGNvdW50ZXIgPSAwO1xyXG4gICAgICAgICAgICAgICAgbmV3QXJyLnB1c2goYWxsSW1nW2NvdW50ZXJdKTtcclxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICggYWxsSW1nW2NvdW50ZXJdICkge1xyXG4gICAgICAgICAgICAgICAgbmV3QXJyLnB1c2goYWxsSW1nW2NvdW50ZXJdKTtcclxuICAgICAgICAgICAgICAgIGNvdW50ZXIrKztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgcmV0dXJuIG1peEltYWdlcyhuZXdBcnIpO1xyXG4gICAgfSxcclxuICAgIHNhdmVEYXRhKHdpZHRoLCBoZWlnaHQpIHtcclxuICAgICAgICBsZXQgZmlyc3RBcnIgPSB0aGlzLmdldE1peEFycih3aWR0aCxoZWlnaHQpO1xyXG4gICAgICAgIGxldCBzZWNvbmRBcnIgPSBtaXhJbWFnZXMoIGZpcnN0QXJyLnNsaWNlKCkgKTtcclxuXHJcbiAgICAgICAgdGhpcy5kYXRhID0gZmlyc3RBcnIuY29uY2F0KHNlY29uZEFycik7XHJcbiAgICB9LFxyXG4gICAgZ2V0RGF0YShpbmRleCkge1xyXG4gICAgICAgIC8vbGV0IHggPSAwO1xyXG4gICAgICAgIHJldHVybiB0aGlzLmRhdGE7XHJcbiAgICB9LFxyXG4gICAgZ2V0SW1nVG9JbmRleChpbmRleCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmRhdGFbaW5kZXggLSAxXTtcclxuICAgIH0sXHJcbiAgICBpc0NoZWNrKGluZGV4MSwgaW5kZXgyKSB7XHJcbiAgICAgICAgaWYoIGluZGV4MSA9PSBpbmRleDIgKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9ZWxzZSBpZiggdGhpcy5nZXRJbWdUb0luZGV4KGluZGV4MSkgPT09IHRoaXMuZ2V0SW1nVG9JbmRleChpbmRleDIpICkge1xyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICB9ZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG59IiwibGV0IGV2ZW50T2JqID0gcmVxdWlyZSgnLi9zdGF0aWMvZXZlbnRPYmonKTtcclxubGV0IERPTW1ldGhvZHMgPSByZXF1aXJlKCcuL3N0YXRpYy9ET01tZXRob2RzJyk7XHJcbmxldCBtb2RlbCA9IHJlcXVpcmUoJy4vbW9kZWwnKTtcclxuXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh2aWV3KSB7XHJcbiAgICBsZXQgdGhldCA9IHRoaXM7XHJcblxyXG4gICAgdmlldy5vbignZmlyc3RPcGVuJywgZnVuY3Rpb24oIHRhcmdldCwgaW5kZXggKSB7XHJcblxyXG4gICAgICAgIC8vY29uc29sZS5sb2coaW5kZXgpO1xyXG4gICAgICAgIGxldCB0aGlzSW1nID0gbW9kZWwuZ2V0SW1nVG9JbmRleChpbmRleCk7XHJcbiAgICAgICAgdmlldy5vcGVuSW1nKHRhcmdldCwgdGhpc0ltZyk7XHJcblxyXG5cclxuICAgIH0pO1xyXG5cclxuICAgIHZpZXcub24oJ2RvdWJsZU9wZW4nLCBmdW5jdGlvbiggdGFyZ2V0LCBpbmRleCwgcHJldkluZGV4ICkge1xyXG5cclxuICAgICAgICBsZXQgdGhpc0ltZyA9IG1vZGVsLmdldEltZ1RvSW5kZXgoaW5kZXgpO1xyXG4gICAgICAgIGxldCBpc0NoZWNrID0gbW9kZWwuaXNDaGVjayhpbmRleCwgcHJldkluZGV4KTtcclxuICAgICAgICB2aWV3Lm9wZW5JbWcodGFyZ2V0LCB0aGlzSW1nKTtcclxuICAgICAgICBpZihpc0NoZWNrKSB7XHJcbiAgICAgICAgICAgIHZpZXcuYmxvY2tlZEltZyhpbmRleCwgcHJldkluZGV4KTtcclxuICAgICAgICB9ZWxzZSB7XHJcbiAgICAgICAgICAgIHZpZXcuZGlzYWJsZUV2ZW50KCk7XHJcbiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgdmlldy5jbG9zZUltZygpO1xyXG4gICAgICAgICAgICAgICAgdmlldy5lbmFibGVFdmVudCgpO1xyXG4gICAgICAgICAgICB9LCA1MDApO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICB9KTtcclxuXHJcbiAgICB2aWV3Lm9uKCdmaW5pc2gnLCBmdW5jdGlvbigpIHtcclxuICAgICAgICB0aGV0LnJlc2V0R2FtZSgpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy5yZXNldEdhbWUgPSBmdW5jdGlvbigpIHtcclxuICAgICAgICB2aWV3LnJlbW92ZUdhbWUoKTtcclxuICAgICAgICB0aGV0Lm5ld0dhbWUoKTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLm5ld0dhbWUgPSBmdW5jdGlvbigpIHtcclxuICAgICAgICBtb2RlbC5nZXRTaXplKCkudGhlbigoZGF0YSk9PiB7XHJcbiAgICAgICAgICAgIGxldCB3aWR0aCA9IGRhdGEud2lkdGggPD0gOCA/IGRhdGEud2lkdGggOiA4LFxyXG4gICAgICAgICAgICBoZWlnaHQgPSBkYXRhLmhlaWdodCA8PSA4ID8gZGF0YS5oZWlnaHQ6IDg7XHJcblxyXG4gICAgICAgICAgICB3aWR0aCA9IDI7XHJcbiAgICAgICAgICAgIGhlaWdodCA9IDI7XHJcblxyXG4gICAgICAgICAgICB2aWV3LnJlbmRlcih3aWR0aCwgaGVpZ2h0KTtcclxuICAgICAgICAgICAgbW9kZWwuc2F2ZURhdGEod2lkdGgsIGhlaWdodCk7XHJcblxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgbmV3R2FtZTogdGhpcy5uZXdHYW1lLFxyXG4gICAgICAgIHJlc2V0OiB0aGlzLnJlc2V0R2FtZVxyXG4gICAgfVxyXG5cclxuXHJcbn0iLCJsZXQgZXZlbnRPYmogPSByZXF1aXJlKCcuL2V2ZW50T2JqJyk7XHJcbm1vZHVsZS5leHBvcnRzID0gIHtcclxuICAgIGdldElkKGlkKSB7XHJcbiAgICAgICAgcmV0dXJuIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKVxyXG4gICAgfSxcclxuXHJcbiAgICBnZXRUYWcodGFnKSB7XHJcbiAgICAgICAgcmV0dXJuIGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKHRhZylcclxuICAgIH0sXHJcblxyXG4gICAgZ2V0QXR0cihldmVudCwgYXR0cikge1xyXG4gICAgICAgIGxldCB0YXJnZXQgPSBldmVudE9iai5nZXRUYXJnZXQoZXZlbnQpO1xyXG4gICAgICAgIGxldCBkYXRhID0gdGFyZ2V0LmdldEF0dHJpYnV0ZShhdHRyKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIGRhdGE7XHJcbiAgICB9LFxyXG5cclxuICAgIGdldE5hbWUobmFtZSkge1xyXG4gICAgICAgIHJldHVybiBkb2N1bWVudC5nZXRFbGVtZW50c0J5TmFtZShuYW1lKTtcclxuICAgIH0sXHJcblxyXG4gICAgZ2V0Q2xhc3MoY2xhc3NOYW1lKSB7XHJcbiAgICAgICAgcmV0dXJuIGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoY2xhc3NOYW1lKVxyXG4gICAgfSxcclxuXHJcbiAgICBnZXRTdHlsZShpZCkge1xyXG4gICAgICAgIHRoaXMuZ2V0SWQoaWQpO1xyXG4gICAgICAgIHJldHVybiB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzLmdldElkKGlkKSlcclxuICAgIH0sXHJcblxyXG4gICAgYWRkQ2xhc3MoaWQsIGNsYXNzTmFtZSkge1xyXG4gICAgICAgIHZhciBlID0gdGhpcy5nZXRJZChpZCk7XHJcbiAgICAgICAgcmV0dXJuIGUuY2xhc3NMaXN0LmFkZChjbGFzc05hbWUpO1xyXG4gICAgfSxcclxuXHJcbiAgICByZW1vdmVDbGFzcyhpZCwgY2xhc3NOYW1lKSB7XHJcbiAgICAgICAgdmFyIGUgPSB0aGlzLmdldElkKGlkKTtcclxuICAgICAgICByZXR1cm4gZS5jbGFzc0xpc3QucmVtb3ZlKGNsYXNzTmFtZSk7XHJcbiAgICB9XHJcbn0iLCJtb2R1bGUuZXhwb3J0cyA9IHtcclxuICAgIGFkZEV2ZW50OiBmdW5jdGlvbiAoZSwgdHlwZSwgZm4pIHtcclxuICAgICAgICBpZiAodHlwZW9mIGFkZEV2ZW50TGlzdGVuZXIgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgICAgICAgIGUuYWRkRXZlbnRMaXN0ZW5lcih0eXBlLCBmbiwgZmFsc2UpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIGF0dGFjaEV2ZW50ICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgICAgICAgICBlLmF0dGFjaEV2ZW50KCdvbicgKyB0eXBlLCBmbik7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgZVsnb24nICsgdHlwZV0gPSBmbjtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG5cclxuICAgIHJlbW92ZUV2ZW50OiBmdW5jdGlvbiAoZSwgdHlwZSwgZm4pIHtcclxuICAgICAgICBpZiAodHlwZW9mIHJlbW92ZUV2ZW50TGlzdGVuZXIgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgICAgICAgIGUucmVtb3ZlRXZlbnRMaXN0ZW5lcih0eXBlLCBmbiwgZmFsc2UpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIGF0dGFjaEV2ZW50ICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgICAgICAgICBlLmRldGFjaEV2ZW50KCdvbicgKyB0eXBlLCBmbik7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgZVsnb24nICsgdHlwZV0gPSBudWxsO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcblxyXG4gICAgZ2V0VGFyZ2V0OiBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICB2YXIgZXZlbnQgPSB3aW5kb3cuZXZlbnQgfHwgZXZlbnQ7XHJcbiAgICAgICAgaWYgKHR5cGVvZiBldmVudC50YXJnZXQgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBldmVudC50YXJnZXQ7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIGV2dC5zcmNFbGVtZW50O1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcblxyXG4gICAgcHJldmVudERlZmF1bHQ6IGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgIGlmICh0eXBlb2YgZXZlbnQucHJldmVudERlZmF1bHQgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgZXZlbnQucmV0dXJuVmFsdWUgPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG5cclxuICAgIGFqYXhHZXQ6IGZ1bmN0aW9uICh1cmwsIGNhbGxiYWNrKSB7XHJcbiAgICAgICAgdmFyIHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xyXG4gICAgICAgIHhoci5vcGVuKCdHRVQnLCB1cmwpO1xyXG4gICAgICAgIHhoci5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICBpZiAodGhpcy5yZWFkeVN0YXRlID09IDQpIHtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLnN0YXR1cyA9PSAyMDApXHJcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soSlNPTi5wYXJzZSh0aGlzLnJlc3BvbnNlVGV4dCkpO1xyXG4gICAgICAgICAgICAgICAgLy8g0LjQvdCw0YfQtSDRgdC10YLQtdCy0LDRjyDQvtGI0LjQsdC60LBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgeGhyLnNlbmQobnVsbCk7XHJcbiAgICB9XHJcbn0iLCJsZXQgZXZlbnRPYmogPSByZXF1aXJlKCcuL3N0YXRpYy9ldmVudE9iaicpO1xyXG5sZXQgRE9NbWV0aG9kcyA9IHJlcXVpcmUoJy4vc3RhdGljL0RPTW1ldGhvZHMnKTtcclxuXHJcbmNsYXNzIFZpZXcge1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgbGV0IHRoZXQgPSB0aGlzO1xyXG4gICAgICAgIGxldCBmbGFnID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5hbGxMaW5rcyA9IG51bGw7XHJcblxyXG4gICAgICAgIHRoaXMuaGFuZGxlcnMgPSB7fTtcclxuXHJcbiAgICAgICAgdGhpcy5vbkhhbmRsZSA9IGZ1bmN0aW9uKGUgPSB3aW5kb3cuZXZlbnQpIHtcclxuICAgICAgICAgICAgbGV0ICR0aGlzID0gZS50YXJnZXQ7XHJcblxyXG4gICAgICAgICAgICBpZiggJHRoaXMuZGF0YXNldC5pZCApIHtcclxuICAgICAgICAgICAgICAgIGxldCBpbmRleCA9ICR0aGlzLmRhdGFzZXQuaWQgPyAkdGhpcy5kYXRhc2V0LmlkIDogbnVsbDtcclxuXHJcbiAgICAgICAgICAgICAgICBpZihpbmRleCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBmbGFnID0gaW5kZXggPyAkdGhpcy5jbGFzc0xpc3QuY29udGFpbnMoJ2FjdGl2ZScpIDogbnVsbDtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgZmlyc3RPcGVuID0gdGhldC5jaGVja0FsbEFjdGl2ZSgnYWN0aXZlJywgdGhldC5nZXRBdmFpbGFibGVMaW5rcygpKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgaWYoIWZpcnN0T3BlbiAmJiAhZmxhZykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGV0LnRyaWdnZXIoJ2ZpcnN0T3BlbicsIGUudGFyZ2V0LCBpbmRleCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfWVsc2UgaWYoIGZpcnN0T3BlbiAmJiAhZmxhZyApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhldC50cmlnZ2VyKCdkb3VibGVPcGVuJywgZS50YXJnZXQsIGluZGV4LCBmaXJzdE9wZW4pO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBsZXQgY2xvc2VkRWxlbXMgPSB0aGV0LmdldEF2YWlsYWJsZUxpbmtzKCk7XHJcbiAgICAgICAgICAgICAgICBpZighY2xvc2VkRWxlbXMubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhldC50cmlnZ2VyKCdmaW5pc2gnKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5vZmZIYW5kbGUgPSBmdW5jdGlvbihlID0gd2luZG93LmV2ZW50KSB7XHJcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIERPTW1ldGhvZHMuZ2V0SWQoJ2NvbnRhaW5lcicpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5vbkhhbmRsZSwgdHJ1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmVuZGVyKHdpZHRoLCBoZWlnaHQpIHtcclxuICAgICAgICBsZXQgbGlzdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3VsJyk7XHJcbiAgICAgICAgbGlzdC5jbGFzc0xpc3QuYWRkKCdnYW1lLWFwcF9fbGlzdCcpO1xyXG4gICAgICAgIGxldCBjb3VudGVyID0gMDtcclxuICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgaGVpZ2h0OyBpKyspIHtcclxuICAgICAgICAgICAgbGV0IHJvdyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgICAgICAgICBmb3IodmFyIGogPSAwOyBqIDwgd2lkdGg7IGorKykge1xyXG4gICAgICAgICAgICAgICAgY291bnRlcisrO1xyXG4gICAgICAgICAgICAgICAgbGV0IGl0ZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xyXG4gICAgICAgICAgICAgICAgbGV0IGJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgICAgICAgICAgICAgbGV0IGltZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xyXG5cclxuICAgICAgICAgICAgICAgIGl0ZW0uY2xhc3NMaXN0LmFkZCgnZ2FtZS1hcHBfX2l0ZW0nKTtcclxuXHJcbiAgICAgICAgICAgICAgICBidG4uY2xhc3NMaXN0LmFkZCgnZ2FtZS1hcHBfX2xpbmsnKTtcclxuICAgICAgICAgICAgICAgIGJ0bi5kYXRhc2V0LmlkID0gY291bnRlcjtcclxuXHJcbiAgICAgICAgICAgICAgICBpbWcuY2xhc3NMaXN0LmFkZCgnZ2FtZS1hcHBfX2ltZycpO1xyXG4gICAgICAgICAgICAgICAgaW1nLnNyYyA9ICdpbWFnZS9kZWZhdWx0LnBuZyc7XHJcblxyXG4gICAgICAgICAgICAgICAgaXRlbS5zdHlsZS53aWR0aCA9IGBjYWxjKDEwMCUvJHt3aWR0aH1gO1xyXG4gICAgICAgICAgICAgICAgYnRuLmFwcGVuZENoaWxkKGltZyk7XHJcbiAgICAgICAgICAgICAgICBpdGVtLmFwcGVuZENoaWxkKGJ0bik7XHJcblxyXG4gICAgICAgICAgICAgICAgcm93LmNsYXNzTGlzdC5hZGQoJ2dhbWUtYXBwX19yb3cnKTtcclxuICAgICAgICAgICAgICAgIHJvdy5hcHBlbmQoaXRlbSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgbGlzdC5hcHBlbmRDaGlsZChyb3cpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBET01tZXRob2RzLmdldElkKCdjb250YWluZXInKS5hcHBlbmRDaGlsZChsaXN0KTtcclxuICAgIH1cclxuXHJcbiAgICBvbihldmVudCwgZm4pIHtcclxuICAgICAgICB0aGlzLmhhbmRsZXJzW2V2ZW50XSA9IHRoaXMuaGFuZGxlcnNbZXZlbnRdIHx8IFtdO1xyXG5cclxuICAgICAgICBpZiAodGhpcy5oYW5kbGVyc1tldmVudF0uaW5kZXhPZihmbikgPT09IC0xKSB7XHJcbiAgICAgICAgICAgIHRoaXMuaGFuZGxlcnNbZXZlbnRdLnB1c2goZm4pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICB0cmlnZ2VyKGV2ZW50KSB7XHJcbiAgICAgICAgaWYgKHRoaXMuaGFuZGxlcnNbZXZlbnRdKSB7XHJcbiAgICAgICAgICAgIHZhciBhcmdzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuaGFuZGxlcnNbZXZlbnRdLmZvckVhY2goZnVuY3Rpb24oZm4pIHtcclxuICAgICAgICAgICAgICAgIGZuLmFwcGx5KG51bGwsIGFyZ3MpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgb3BlbkltZyh0YXJnZXQsIHNyYywgZmxhZykge1xyXG4gICAgICAgIHRhcmdldC5jaGlsZHJlblswXS5zcmMgPSBzcmM7XHJcbiAgICAgICAgdGFyZ2V0LmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xyXG4gICAgfVxyXG5cclxuICAgIGNsb3NlSW1nKCkge1xyXG4gICAgICAgIGxldCBhbGxJbWcgPSBWaWV3LnByb3RvdHlwZS5nZXRBdmFpbGFibGVMaW5rcygpO1xyXG4gICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCBhbGxJbWcubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgYWxsSW1nW2ldLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICBhbGxJbWdbaV0uY2hpbGRyZW5bMF0uc3JjID0gJ2ltYWdlL2RlZmF1bHQucG5nJztcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0QWxsTGlua3MoKSB7XHJcbiAgICAgICAgcmV0dXJuIERPTW1ldGhvZHMuZ2V0Q2xhc3MoJ2dhbWUtYXBwX19saW5rJyk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0QXZhaWxhYmxlTGlua3MoKSB7XHJcbiAgICAgICAgbGV0IGFsbEVsZW1zID0gRE9NbWV0aG9kcy5nZXRDbGFzcygnZ2FtZS1hcHBfX2xpbmsnKTtcclxuICAgICAgICBsZXQgZmlsdGVyRWxlbXMgPSBbXTtcclxuICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgYWxsRWxlbXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgaWYoICFhbGxFbGVtc1tpXS5jbGFzc0xpc3QuY29udGFpbnMoJ2lzQ2xvc2UnKSApIHtcclxuICAgICAgICAgICAgICAgIGZpbHRlckVsZW1zLnB1c2goYWxsRWxlbXNbaV0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBmaWx0ZXJFbGVtcztcclxuICAgIH1cclxuXHJcbiAgICBjaGVja0FsbEFjdGl2ZShjbGFzc05hbWUsIGVsZW1zKSB7XHJcbiAgICAgICAgbGV0IHJlcyA9IGZhbHNlO1xyXG4gICAgICAgIGZvcihsZXQgZWwgb2YgZWxlbXMpIHtcclxuICAgICAgICAgICBpZihlbC5jbGFzc0xpc3QuY29udGFpbnMoY2xhc3NOYW1lKSkge1xyXG4gICAgICAgICAgICAgICByZXMgPSBlbC5kYXRhc2V0LmlkO1xyXG4gICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiByZXM7XHJcbiAgICB9XHJcblxyXG4gICAgYmxvY2tlZEltZyhmaXJzdEluZGV4LCBzZWNvbmRJbmRleCkge1xyXG4gICAgICAgIGxldCBhbGxCbG9ja3MgPSBWaWV3LnByb3RvdHlwZS5nZXRBbGxMaW5rcygpO1xyXG4gICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCBhbGxCbG9ja3MubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgaWYoIGFsbEJsb2Nrc1tpXS5kYXRhc2V0LmlkID09IGZpcnN0SW5kZXggfHwgYWxsQmxvY2tzW2ldLmRhdGFzZXQuaWQgPT0gc2Vjb25kSW5kZXggKSB7XHJcbiAgICAgICAgICAgICAgICBhbGxCbG9ja3NbaV0uY2xhc3NMaXN0LmFkZCgnaXNDbG9zZScpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJlbW92ZUdhbWUoKSB7XHJcbiAgICAgICAgbGV0IGVsZW1zID0gRE9NbWV0aG9kcy5nZXRJZCgnY29udGFpbmVyJykuY2hpbGRyZW47XHJcbiAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IGVsZW1zLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGVsZW1zW2ldLnJlbW92ZSgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBkaXNhYmxlRXZlbnQoKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2codGhpcy5vbkhhbmRsZSlcclxuICAgICAgICBET01tZXRob2RzLmdldElkKCdjb250YWluZXInKS5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMub25IYW5kbGUsIHRydWUpO1xyXG4gICAgfVxyXG5cclxuICAgIGVuYWJsZUV2ZW50KCkge1xyXG4gICAgICAgIERPTW1ldGhvZHMuZ2V0SWQoJ2NvbnRhaW5lcicpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5vbkhhbmRsZSwgdHJ1ZSk7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBWaWV3OyJdfQ=="}