{"version":3,"sources":["node_modules/browser-pack/_prelude.js","js/index.js","js/model.js","js/presenter.js","js/static/DOMmethods.js","js/static/eventObj.js","js/view.js"],"names":[],"mappings":"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","file":"build.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\r\nlet View = require('./view');\r\nlet DOMmethods = require('./static/DOMmethods');\r\nlet Presenter = require('./presenter');\r\n\r\nlet myGame = new Presenter(new View());\r\n\r\nmyGame.newGame();\r\n\r\nDOMmethods.getId('btn').addEventListener('click', function(e) {\r\n    myGame.reset();\r\n    console.log(myGame)\r\n    e.preventDefault()\r\n})","let eventObj = require('./static/eventObj');\r\n\r\nfunction randomNumbers(a, b) {\r\n    return Math.random() - 0.5;\r\n};\r\n\r\n\r\nfunction mixImages(array) {\r\n    let counter = array.length;\r\n\r\n    // While there are elements in the array\r\n    while (counter > 0) {\r\n        // Pick a random index\r\n        let index = Math.floor(Math.random() * counter);\r\n\r\n        // Decrease counter by 1\r\n        counter--;\r\n\r\n        // And swap the last element with it\r\n        let temp = array[counter];\r\n        array[counter] = array[index];\r\n        array[index] = temp;\r\n    }\r\n\r\n    return array;\r\n}\r\n\r\nmodule.exports = {\r\n    data: [],\r\n    getSize() {\r\n        return new Promise((resolve, reject)=> {\r\n            eventObj.ajaxGet('https://kde.link/test/get_field_size.php', function(data) {\r\n                resolve(data);\r\n            })\r\n        })\r\n    },\r\n    getImages() {\r\n        var imagePath = [];\r\n        for(var i = 0; i<10; i++) {\r\n            imagePath.push('https://kde.link/test/'+ i +'.png');\r\n        }\r\n        return imagePath;\r\n    },\r\n    getMixArr(width, height) {\r\n        let allImg = this.getImages(),\r\n            newArr = [],\r\n            counter = 0;\r\n\r\n        for(let i = 0; i < width*height/2; i++) {\r\n            if( !allImg[counter] ) {\r\n                counter = 0;\r\n                newArr.push(allImg[counter]);\r\n                continue;\r\n            }\r\n            if ( allImg[counter] ) {\r\n                newArr.push(allImg[counter]);\r\n                counter++;\r\n            }\r\n        };\r\n        return mixImages(newArr);\r\n    },\r\n    saveData(width, height) {\r\n        let firstArr = this.getMixArr(width,height);\r\n        let secondArr = mixImages( firstArr.slice() );\r\n\r\n        this.data = firstArr.concat(secondArr);\r\n    },\r\n    getData(index) {\r\n        //let x = 0;\r\n        return this.data;\r\n    },\r\n    getImgToIndex(index) {\r\n        return this.data[index - 1];\r\n    },\r\n    isCheck(index1, index2) {\r\n        if( index1 == index2 ) {\r\n            return false;\r\n        }else if( this.getImgToIndex(index1) === this.getImgToIndex(index2) ) {\r\n            return true;\r\n        }else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n}","let eventObj = require('./static/eventObj');\r\nlet DOMmethods = require('./static/DOMmethods');\r\nlet model = require('./model');\r\n\r\n\r\nmodule.exports = function (view) {\r\n    let thet = this;\r\n\r\n    view.on('firstOpen', function( target, index ) {\r\n\r\n        let thisImg = model.getImgToIndex(index);\r\n        view.openImg(target, thisImg);\r\n\r\n    });\r\n\r\n    view.on('doubleOpen', function( target, index, prevIndex ) {\r\n\r\n        let thisImg = model.getImgToIndex(index);\r\n        let isCheck = model.isCheck(index, prevIndex);\r\n        view.openImg(target, thisImg);\r\n        if(isCheck) {\r\n            view.blockedImg(index, prevIndex);\r\n        }else {\r\n            view.disableEvent();\r\n            setTimeout(function () {\r\n                view.closeImg();\r\n                view.enableEvent();\r\n            }, 500);\r\n        }\r\n\r\n    });\r\n\r\n    view.on('finish', function() {\r\n        thet.resetGame();\r\n    });\r\n\r\n    this.resetGame = function() {\r\n        view.removeGame();\r\n        thet.newGame();\r\n    }\r\n\r\n    this.newGame = function() {\r\n        model.getSize().then((data)=> {\r\n            let width = data.width <= 8 ? data.width : 8,\r\n            height = data.height <= 8 ? data.height: 8;\r\n\r\n\r\n            view.render(width, height);\r\n            model.saveData(width, height);\r\n\r\n        });\r\n    }\r\n\r\n    return {\r\n        newGame: this.newGame,\r\n        reset: this.resetGame\r\n    }\r\n\r\n\r\n}","let eventObj = require('./eventObj');\r\nmodule.exports =  {\r\n    getId(id) {\r\n        return document.getElementById(id)\r\n    },\r\n\r\n    getTag(tag) {\r\n        return document.getElementsByTagName(tag)\r\n    },\r\n\r\n    getAttr(event, attr) {\r\n        let target = eventObj.getTarget(event);\r\n        let data = target.getAttribute(attr);\r\n\r\n        return data;\r\n    },\r\n\r\n    getName(name) {\r\n        return document.getElementsByName(name);\r\n    },\r\n\r\n    getClass(className) {\r\n        return document.getElementsByClassName(className)\r\n    },\r\n\r\n    getStyle(id) {\r\n        this.getId(id);\r\n        return window.getComputedStyle(this.getId(id))\r\n    },\r\n\r\n    addClass(id, className) {\r\n        var e = this.getId(id);\r\n        return e.classList.add(className);\r\n    },\r\n\r\n    removeClass(id, className) {\r\n        var e = this.getId(id);\r\n        return e.classList.remove(className);\r\n    }\r\n}","module.exports = {\r\n    addEvent: function (e, type, fn) {\r\n        if (typeof addEventListener !== 'undefined') {\r\n            e.addEventListener(type, fn, false);\r\n        } else if (typeof attachEvent !== 'undefined') {\r\n            e.attachEvent('on' + type, fn);\r\n        } else {\r\n            e['on' + type] = fn;\r\n        }\r\n    },\r\n\r\n    removeEvent: function (e, type, fn) {\r\n        if (typeof removeEventListener !== 'undefined') {\r\n            e.removeEventListener(type, fn, false);\r\n        } else if (typeof attachEvent !== 'undefined') {\r\n            e.detachEvent('on' + type, fn);\r\n        } else {\r\n            e['on' + type] = null;\r\n        }\r\n    },\r\n\r\n    getTarget: function (event) {\r\n        var event = window.event || event;\r\n        if (typeof event.target !== 'undefined') {\r\n            return event.target;\r\n        } else {\r\n            return evt.srcElement;\r\n        }\r\n    },\r\n\r\n    preventDefault: function (event) {\r\n        if (typeof event.preventDefault !== 'undefined') {\r\n            event.preventDefault();\r\n        } else {\r\n            event.returnValue = false;\r\n        }\r\n    },\r\n\r\n    ajaxGet: function (url, callback) {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET', url);\r\n        xhr.onreadystatechange = function(){\r\n            if (this.readyState == 4) {\r\n                if (this.status == 200)\r\n                    callback(JSON.parse(this.responseText));\r\n                // иначе сетевая ошибка\r\n            }\r\n        };\r\n        xhr.send(null);\r\n    }\r\n}","let eventObj = require('./static/eventObj');\r\nlet DOMmethods = require('./static/DOMmethods');\r\n\r\nclass View {\r\n    constructor() {\r\n        let thet = this;\r\n        let flag = false;\r\n        this.allLinks = null;\r\n\r\n        this.handlers = {};\r\n\r\n        this.onHandle = function(e = window.event) {\r\n            let $this = e.target;\r\n\r\n            if( $this.dataset.id ) {\r\n                let index = $this.dataset.id ? $this.dataset.id : null;\r\n\r\n                if(index) {\r\n                    let flag = index ? $this.classList.contains('active') : null;\r\n                    let firstOpen = thet.checkAllActive('active', thet.getAvailableLinks());\r\n\r\n                    if(!firstOpen && !flag) {\r\n                        thet.trigger('firstOpen', e.target, index);\r\n                    }else if( firstOpen && !flag ) {\r\n                        thet.trigger('doubleOpen', e.target, index, firstOpen);\r\n                    }\r\n                }\r\n\r\n                let closedElems = thet.getAvailableLinks();\r\n                if(!closedElems.length) {\r\n                    thet.trigger('finish');\r\n                }\r\n            }\r\n        }\r\n\r\n        this.offHandle = function(e = window.event) {\r\n            e.preventDefault();\r\n        }\r\n\r\n        DOMmethods.getId('container').addEventListener('click', this.onHandle, true);\r\n    }\r\n\r\n    render(width, height) {\r\n        let list = document.createElement('ul');\r\n        list.classList.add('game-app__list');\r\n        let counter = 0;\r\n        for(let i = 0; i < height; i++) {\r\n            let row = document.createElement('div');\r\n            for(var j = 0; j < width; j++) {\r\n                counter++;\r\n                let item = document.createElement('li');\r\n                let btn = document.createElement('div');\r\n                let img = document.createElement('img');\r\n\r\n                item.classList.add('game-app__item');\r\n\r\n                btn.classList.add('game-app__link');\r\n                btn.dataset.id = counter;\r\n\r\n                img.classList.add('game-app__img');\r\n                img.src = 'image/default.png';\r\n\r\n                item.style.width = `calc(100%/${width}`;\r\n                btn.appendChild(img);\r\n                item.appendChild(btn);\r\n\r\n                row.classList.add('game-app__row');\r\n                row.append(item);\r\n            }\r\n            list.appendChild(row);\r\n        }\r\n        DOMmethods.getId('container').appendChild(list);\r\n    }\r\n\r\n    on(event, fn) {\r\n        this.handlers[event] = this.handlers[event] || [];\r\n\r\n        if (this.handlers[event].indexOf(fn) === -1) {\r\n            this.handlers[event].push(fn);\r\n        }\r\n    }\r\n\r\n    trigger(event) {\r\n        if (this.handlers[event]) {\r\n            var args = Array.prototype.slice.call(arguments, 1);\r\n\r\n            this.handlers[event].forEach(function(fn) {\r\n                fn.apply(null, args);\r\n            });\r\n        }\r\n    }\r\n\r\n    openImg(target, src, flag) {\r\n        target.children[0].src = src;\r\n        target.classList.add('active');\r\n    }\r\n\r\n    closeImg() {\r\n        let allImg = View.prototype.getAvailableLinks();\r\n        for(let i = 0; i < allImg.length; i++) {\r\n            allImg[i].classList.remove('active');\r\n            allImg[i].children[0].src = 'image/default.png';\r\n        }\r\n    }\r\n\r\n    getAllLinks() {\r\n        return DOMmethods.getClass('game-app__link');\r\n    }\r\n\r\n    getAvailableLinks() {\r\n        let allElems = DOMmethods.getClass('game-app__link');\r\n        let filterElems = [];\r\n        for(let i = 0; i < allElems.length; i++) {\r\n            if( !allElems[i].classList.contains('isClose') ) {\r\n                filterElems.push(allElems[i]);\r\n            }\r\n        }\r\n        return filterElems;\r\n    }\r\n\r\n    checkAllActive(className, elems) {\r\n        let res = false;\r\n        for(let el of elems) {\r\n           if(el.classList.contains(className)) {\r\n               res = el.dataset.id;\r\n               break;\r\n           }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    blockedImg(firstIndex, secondIndex) {\r\n        let allBlocks = View.prototype.getAllLinks();\r\n        for(let i = 0; i < allBlocks.length; i++) {\r\n            if( allBlocks[i].dataset.id == firstIndex || allBlocks[i].dataset.id == secondIndex ) {\r\n                allBlocks[i].classList.add('isClose');\r\n            }\r\n        }\r\n    }\r\n\r\n    removeGame() {\r\n        let elems = DOMmethods.getId('container').children;\r\n        for(let i = 0; i < elems.length; i++) {\r\n            elems[i].remove();\r\n        }\r\n    }\r\n\r\n    disableEvent() {\r\n        DOMmethods.getId('container').removeEventListener('click', this.onHandle, true);\r\n    }\r\n\r\n    enableEvent() {\r\n        DOMmethods.getId('container').addEventListener('click', this.onHandle, true);\r\n    }\r\n\r\n}\r\n\r\n\r\nmodule.exports = View;"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJqc1xcaW5kZXguanMiLCJqc1xcbW9kZWwuanMiLCJqc1xccHJlc2VudGVyLmpzIiwianNcXHN0YXRpY1xcRE9NbWV0aG9kcy5qcyIsImpzXFxzdGF0aWNcXGV2ZW50T2JqLmpzIiwianNcXHZpZXcuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FDQ0EsSUFBSSxPQUFPLFFBQVEsUUFBUixDQUFYO0FBQ0EsSUFBSSxhQUFhLFFBQVEscUJBQVIsQ0FBakI7QUFDQSxJQUFJLFlBQVksUUFBUSxhQUFSLENBQWhCOztBQUVBLElBQUksU0FBUyxJQUFJLFNBQUosQ0FBYyxJQUFJLElBQUosRUFBZCxDQUFiOztBQUVBLE9BQU8sT0FBUDs7QUFFQSxXQUFXLEtBQVgsQ0FBaUIsS0FBakIsRUFBd0IsZ0JBQXhCLENBQXlDLE9BQXpDLEVBQWtELFVBQVMsQ0FBVCxFQUFZO0FBQzFELFdBQU8sS0FBUDtBQUNBLFlBQVEsR0FBUixDQUFZLE1BQVo7QUFDQSxNQUFFLGNBQUY7QUFDSCxDQUpEOzs7QUNUQSxJQUFJLFdBQVcsUUFBUSxtQkFBUixDQUFmOztBQUVBLFNBQVMsYUFBVCxDQUF1QixDQUF2QixFQUEwQixDQUExQixFQUE2QjtBQUN6QixXQUFPLEtBQUssTUFBTCxLQUFnQixHQUF2QjtBQUNIOztBQUdELFNBQVMsU0FBVCxDQUFtQixLQUFuQixFQUEwQjtBQUN0QixRQUFJLFVBQVUsTUFBTSxNQUFwQjs7QUFFQTtBQUNBLFdBQU8sVUFBVSxDQUFqQixFQUFvQjtBQUNoQjtBQUNBLFlBQUksUUFBUSxLQUFLLEtBQUwsQ0FBVyxLQUFLLE1BQUwsS0FBZ0IsT0FBM0IsQ0FBWjs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsWUFBSSxPQUFPLE1BQU0sT0FBTixDQUFYO0FBQ0EsY0FBTSxPQUFOLElBQWlCLE1BQU0sS0FBTixDQUFqQjtBQUNBLGNBQU0sS0FBTixJQUFlLElBQWY7QUFDSDs7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RUFBZSxJQUFJLFVBQVUsTUFBN0IsRUFBcUMsR0FBckMsRUFBMEM7QUFDdEMsZ0JBQUksVUFBVSxDQUFWLEVBQWEsT0FBYixDQUFxQixFQUFyQixJQUEyQixVQUEzQixJQUF5QyxVQUFVLENBQVYsRUFBYSxPQUFiLENBQXFCLEVBQXJCLElBQTJCLFdBQXhFLEVBQXNGO0FBQ2xGLDBCQUFVLENBQVYsRUFBYSxTQUFiLENBQXVCLEdBQXZCLENBQTJCLFNBQTNCO0FBQ0g7QUFDSjtBQUNKOztBQUVELGlCQUFhO0FBQ1QsWUFBSSxRQUFRLFdBQVcsS0FBWCxDQUFpQixXQUFqQixFQUE4QixRQUExQztBQUNBLGFBQUksSUFBSSxJQUFJLENBQVosRUFBZSxJQUFJLE1BQU0sTUFBekIsRUFBaUMsR0FBakMsRUFBc0M7QUFDbEMsa0JBQU0sQ0FBTixFQUFTLE1BQVQ7QUFDSDtBQUNKOztBQUVELG1CQUFlO0FBQ1gsbUJBQVcsS0FBWCxDQUFpQixXQUFqQixFQUE4QixtQkFBOUIsQ0FBa0QsT0FBbEQsRUFBMkQsS0FBSyxRQUFoRSxFQUEwRSxJQUExRTtBQUNIOztBQUVELGtCQUFjO0FBQ1YsbUJBQVcsS0FBWCxDQUFpQixXQUFqQixFQUE4QixnQkFBOUIsQ0FBK0MsT0FBL0MsRUFBd0QsS0FBSyxRQUE3RCxFQUF1RSxJQUF2RTtBQUNIOztBQXRKTTs7QUEySlgsT0FBTyxPQUFQLEdBQWlCLElBQWpCIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIlxyXG5sZXQgVmlldyA9IHJlcXVpcmUoJy4vdmlldycpO1xyXG5sZXQgRE9NbWV0aG9kcyA9IHJlcXVpcmUoJy4vc3RhdGljL0RPTW1ldGhvZHMnKTtcclxubGV0IFByZXNlbnRlciA9IHJlcXVpcmUoJy4vcHJlc2VudGVyJyk7XHJcblxyXG5sZXQgbXlHYW1lID0gbmV3IFByZXNlbnRlcihuZXcgVmlldygpKTtcclxuXHJcbm15R2FtZS5uZXdHYW1lKCk7XHJcblxyXG5ET01tZXRob2RzLmdldElkKCdidG4nKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcclxuICAgIG15R2FtZS5yZXNldCgpO1xyXG4gICAgY29uc29sZS5sb2cobXlHYW1lKVxyXG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpXHJcbn0pIiwibGV0IGV2ZW50T2JqID0gcmVxdWlyZSgnLi9zdGF0aWMvZXZlbnRPYmonKTtcclxuXHJcbmZ1bmN0aW9uIHJhbmRvbU51bWJlcnMoYSwgYikge1xyXG4gICAgcmV0dXJuIE1hdGgucmFuZG9tKCkgLSAwLjU7XHJcbn07XHJcblxyXG5cclxuZnVuY3Rpb24gbWl4SW1hZ2VzKGFycmF5KSB7XHJcbiAgICBsZXQgY291bnRlciA9IGFycmF5Lmxlbmd0aDtcclxuXHJcbiAgICAvLyBXaGlsZSB0aGVyZSBhcmUgZWxlbWVudHMgaW4gdGhlIGFycmF5XHJcbiAgICB3aGlsZSAoY291bnRlciA+IDApIHtcclxuICAgICAgICAvLyBQaWNrIGEgcmFuZG9tIGluZGV4XHJcbiAgICAgICAgbGV0IGluZGV4ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogY291bnRlcik7XHJcblxyXG4gICAgICAgIC8vIERlY3JlYXNlIGNvdW50ZXIgYnkgMVxyXG4gICAgICAgIGNvdW50ZXItLTtcclxuXHJcbiAgICAgICAgLy8gQW5kIHN3YXAgdGhlIGxhc3QgZWxlbWVudCB3aXRoIGl0XHJcbiAgICAgICAgbGV0IHRlbXAgPSBhcnJheVtjb3VudGVyXTtcclxuICAgICAgICBhcnJheVtjb3VudGVyXSA9IGFycmF5W2luZGV4XTtcclxuICAgICAgICBhcnJheVtpbmRleF0gPSB0ZW1wO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBhcnJheTtcclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgICBkYXRhOiBbXSxcclxuICAgIGdldFNpemUoKSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpPT4ge1xyXG4gICAgICAgICAgICBldmVudE9iai5hamF4R2V0KCdodHRwczovL2tkZS5saW5rL3Rlc3QvZ2V0X2ZpZWxkX3NpemUucGhwJywgZnVuY3Rpb24oZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgcmVzb2x2ZShkYXRhKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9KVxyXG4gICAgfSxcclxuICAgIGdldEltYWdlcygpIHtcclxuICAgICAgICB2YXIgaW1hZ2VQYXRoID0gW107XHJcbiAgICAgICAgZm9yKHZhciBpID0gMDsgaTwxMDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGltYWdlUGF0aC5wdXNoKCdodHRwczovL2tkZS5saW5rL3Rlc3QvJysgaSArJy5wbmcnKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGltYWdlUGF0aDtcclxuICAgIH0sXHJcbiAgICBnZXRNaXhBcnIod2lkdGgsIGhlaWdodCkge1xyXG4gICAgICAgIGxldCBhbGxJbWcgPSB0aGlzLmdldEltYWdlcygpLFxyXG4gICAgICAgICAgICBuZXdBcnIgPSBbXSxcclxuICAgICAgICAgICAgY291bnRlciA9IDA7XHJcblxyXG4gICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCB3aWR0aCpoZWlnaHQvMjsgaSsrKSB7XHJcbiAgICAgICAgICAgIGlmKCAhYWxsSW1nW2NvdW50ZXJdICkge1xyXG4gICAgICAgICAgICAgICAgY291bnRlciA9IDA7XHJcbiAgICAgICAgICAgICAgICBuZXdBcnIucHVzaChhbGxJbWdbY291bnRlcl0pO1xyXG4gICAgICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKCBhbGxJbWdbY291bnRlcl0gKSB7XHJcbiAgICAgICAgICAgICAgICBuZXdBcnIucHVzaChhbGxJbWdbY291bnRlcl0pO1xyXG4gICAgICAgICAgICAgICAgY291bnRlcisrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgICAgICByZXR1cm4gbWl4SW1hZ2VzKG5ld0Fycik7XHJcbiAgICB9LFxyXG4gICAgc2F2ZURhdGEod2lkdGgsIGhlaWdodCkge1xyXG4gICAgICAgIGxldCBmaXJzdEFyciA9IHRoaXMuZ2V0TWl4QXJyKHdpZHRoLGhlaWdodCk7XHJcbiAgICAgICAgbGV0IHNlY29uZEFyciA9IG1peEltYWdlcyggZmlyc3RBcnIuc2xpY2UoKSApO1xyXG5cclxuICAgICAgICB0aGlzLmRhdGEgPSBmaXJzdEFyci5jb25jYXQoc2Vjb25kQXJyKTtcclxuICAgIH0sXHJcbiAgICBnZXREYXRhKGluZGV4KSB7XHJcbiAgICAgICAgLy9sZXQgeCA9IDA7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YTtcclxuICAgIH0sXHJcbiAgICBnZXRJbWdUb0luZGV4KGluZGV4KSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YVtpbmRleCAtIDFdO1xyXG4gICAgfSxcclxuICAgIGlzQ2hlY2soaW5kZXgxLCBpbmRleDIpIHtcclxuICAgICAgICBpZiggaW5kZXgxID09IGluZGV4MiApIHtcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1lbHNlIGlmKCB0aGlzLmdldEltZ1RvSW5kZXgoaW5kZXgxKSA9PT0gdGhpcy5nZXRJbWdUb0luZGV4KGluZGV4MikgKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgIH1lbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbn0iLCJsZXQgZXZlbnRPYmogPSByZXF1aXJlKCcuL3N0YXRpYy9ldmVudE9iaicpO1xyXG5sZXQgRE9NbWV0aG9kcyA9IHJlcXVpcmUoJy4vc3RhdGljL0RPTW1ldGhvZHMnKTtcclxubGV0IG1vZGVsID0gcmVxdWlyZSgnLi9tb2RlbCcpO1xyXG5cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHZpZXcpIHtcclxuICAgIGxldCB0aGV0ID0gdGhpcztcclxuXHJcbiAgICB2aWV3Lm9uKCdmaXJzdE9wZW4nLCBmdW5jdGlvbiggdGFyZ2V0LCBpbmRleCApIHtcclxuXHJcbiAgICAgICAgbGV0IHRoaXNJbWcgPSBtb2RlbC5nZXRJbWdUb0luZGV4KGluZGV4KTtcclxuICAgICAgICB2aWV3Lm9wZW5JbWcodGFyZ2V0LCB0aGlzSW1nKTtcclxuXHJcbiAgICB9KTtcclxuXHJcbiAgICB2aWV3Lm9uKCdkb3VibGVPcGVuJywgZnVuY3Rpb24oIHRhcmdldCwgaW5kZXgsIHByZXZJbmRleCApIHtcclxuXHJcbiAgICAgICAgbGV0IHRoaXNJbWcgPSBtb2RlbC5nZXRJbWdUb0luZGV4KGluZGV4KTtcclxuICAgICAgICBsZXQgaXNDaGVjayA9IG1vZGVsLmlzQ2hlY2soaW5kZXgsIHByZXZJbmRleCk7XHJcbiAgICAgICAgdmlldy5vcGVuSW1nKHRhcmdldCwgdGhpc0ltZyk7XHJcbiAgICAgICAgaWYoaXNDaGVjaykge1xyXG4gICAgICAgICAgICB2aWV3LmJsb2NrZWRJbWcoaW5kZXgsIHByZXZJbmRleCk7XHJcbiAgICAgICAgfWVsc2Uge1xyXG4gICAgICAgICAgICB2aWV3LmRpc2FibGVFdmVudCgpO1xyXG4gICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHZpZXcuY2xvc2VJbWcoKTtcclxuICAgICAgICAgICAgICAgIHZpZXcuZW5hYmxlRXZlbnQoKTtcclxuICAgICAgICAgICAgfSwgNTAwKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgfSk7XHJcblxyXG4gICAgdmlldy5vbignZmluaXNoJywgZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgdGhldC5yZXNldEdhbWUoKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMucmVzZXRHYW1lID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgdmlldy5yZW1vdmVHYW1lKCk7XHJcbiAgICAgICAgdGhldC5uZXdHYW1lKCk7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5uZXdHYW1lID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgbW9kZWwuZ2V0U2l6ZSgpLnRoZW4oKGRhdGEpPT4ge1xyXG4gICAgICAgICAgICBsZXQgd2lkdGggPSBkYXRhLndpZHRoIDw9IDggPyBkYXRhLndpZHRoIDogOCxcclxuICAgICAgICAgICAgaGVpZ2h0ID0gZGF0YS5oZWlnaHQgPD0gOCA/IGRhdGEuaGVpZ2h0OiA4O1xyXG5cclxuXHJcbiAgICAgICAgICAgIHZpZXcucmVuZGVyKHdpZHRoLCBoZWlnaHQpO1xyXG4gICAgICAgICAgICBtb2RlbC5zYXZlRGF0YSh3aWR0aCwgaGVpZ2h0KTtcclxuXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBuZXdHYW1lOiB0aGlzLm5ld0dhbWUsXHJcbiAgICAgICAgcmVzZXQ6IHRoaXMucmVzZXRHYW1lXHJcbiAgICB9XHJcblxyXG5cclxufSIsImxldCBldmVudE9iaiA9IHJlcXVpcmUoJy4vZXZlbnRPYmonKTtcclxubW9kdWxlLmV4cG9ydHMgPSAge1xyXG4gICAgZ2V0SWQoaWQpIHtcclxuICAgICAgICByZXR1cm4gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpXHJcbiAgICB9LFxyXG5cclxuICAgIGdldFRhZyh0YWcpIHtcclxuICAgICAgICByZXR1cm4gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUodGFnKVxyXG4gICAgfSxcclxuXHJcbiAgICBnZXRBdHRyKGV2ZW50LCBhdHRyKSB7XHJcbiAgICAgICAgbGV0IHRhcmdldCA9IGV2ZW50T2JqLmdldFRhcmdldChldmVudCk7XHJcbiAgICAgICAgbGV0IGRhdGEgPSB0YXJnZXQuZ2V0QXR0cmlidXRlKGF0dHIpO1xyXG5cclxuICAgICAgICByZXR1cm4gZGF0YTtcclxuICAgIH0sXHJcblxyXG4gICAgZ2V0TmFtZShuYW1lKSB7XHJcbiAgICAgICAgcmV0dXJuIGRvY3VtZW50LmdldEVsZW1lbnRzQnlOYW1lKG5hbWUpO1xyXG4gICAgfSxcclxuXHJcbiAgICBnZXRDbGFzcyhjbGFzc05hbWUpIHtcclxuICAgICAgICByZXR1cm4gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShjbGFzc05hbWUpXHJcbiAgICB9LFxyXG5cclxuICAgIGdldFN0eWxlKGlkKSB7XHJcbiAgICAgICAgdGhpcy5nZXRJZChpZCk7XHJcbiAgICAgICAgcmV0dXJuIHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHRoaXMuZ2V0SWQoaWQpKVxyXG4gICAgfSxcclxuXHJcbiAgICBhZGRDbGFzcyhpZCwgY2xhc3NOYW1lKSB7XHJcbiAgICAgICAgdmFyIGUgPSB0aGlzLmdldElkKGlkKTtcclxuICAgICAgICByZXR1cm4gZS5jbGFzc0xpc3QuYWRkKGNsYXNzTmFtZSk7XHJcbiAgICB9LFxyXG5cclxuICAgIHJlbW92ZUNsYXNzKGlkLCBjbGFzc05hbWUpIHtcclxuICAgICAgICB2YXIgZSA9IHRoaXMuZ2V0SWQoaWQpO1xyXG4gICAgICAgIHJldHVybiBlLmNsYXNzTGlzdC5yZW1vdmUoY2xhc3NOYW1lKTtcclxuICAgIH1cclxufSIsIm1vZHVsZS5leHBvcnRzID0ge1xyXG4gICAgYWRkRXZlbnQ6IGZ1bmN0aW9uIChlLCB0eXBlLCBmbikge1xyXG4gICAgICAgIGlmICh0eXBlb2YgYWRkRXZlbnRMaXN0ZW5lciAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgICAgICAgZS5hZGRFdmVudExpc3RlbmVyKHR5cGUsIGZuLCBmYWxzZSk7XHJcbiAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgYXR0YWNoRXZlbnQgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgICAgICAgIGUuYXR0YWNoRXZlbnQoJ29uJyArIHR5cGUsIGZuKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBlWydvbicgKyB0eXBlXSA9IGZuO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcblxyXG4gICAgcmVtb3ZlRXZlbnQ6IGZ1bmN0aW9uIChlLCB0eXBlLCBmbikge1xyXG4gICAgICAgIGlmICh0eXBlb2YgcmVtb3ZlRXZlbnRMaXN0ZW5lciAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgICAgICAgZS5yZW1vdmVFdmVudExpc3RlbmVyKHR5cGUsIGZuLCBmYWxzZSk7XHJcbiAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgYXR0YWNoRXZlbnQgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgICAgICAgIGUuZGV0YWNoRXZlbnQoJ29uJyArIHR5cGUsIGZuKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBlWydvbicgKyB0eXBlXSA9IG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuXHJcbiAgICBnZXRUYXJnZXQ6IGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgIHZhciBldmVudCA9IHdpbmRvdy5ldmVudCB8fCBldmVudDtcclxuICAgICAgICBpZiAodHlwZW9mIGV2ZW50LnRhcmdldCAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGV2ZW50LnRhcmdldDtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gZXZ0LnNyY0VsZW1lbnQ7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuXHJcbiAgICBwcmV2ZW50RGVmYXVsdDogZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgaWYgKHR5cGVvZiBldmVudC5wcmV2ZW50RGVmYXVsdCAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBldmVudC5yZXR1cm5WYWx1ZSA9IGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcblxyXG4gICAgYWpheEdldDogZnVuY3Rpb24gKHVybCwgY2FsbGJhY2spIHtcclxuICAgICAgICB2YXIgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XHJcbiAgICAgICAgeGhyLm9wZW4oJ0dFVCcsIHVybCk7XHJcbiAgICAgICAgeGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnJlYWR5U3RhdGUgPT0gNCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuc3RhdHVzID09IDIwMClcclxuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhKU09OLnBhcnNlKHRoaXMucmVzcG9uc2VUZXh0KSk7XHJcbiAgICAgICAgICAgICAgICAvLyDQuNC90LDRh9C1INGB0LXRgtC10LLQsNGPINC+0YjQuNCx0LrQsFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgICAgICB4aHIuc2VuZChudWxsKTtcclxuICAgIH1cclxufSIsImxldCBldmVudE9iaiA9IHJlcXVpcmUoJy4vc3RhdGljL2V2ZW50T2JqJyk7XHJcbmxldCBET01tZXRob2RzID0gcmVxdWlyZSgnLi9zdGF0aWMvRE9NbWV0aG9kcycpO1xyXG5cclxuY2xhc3MgVmlldyB7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBsZXQgdGhldCA9IHRoaXM7XHJcbiAgICAgICAgbGV0IGZsYWcgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLmFsbExpbmtzID0gbnVsbDtcclxuXHJcbiAgICAgICAgdGhpcy5oYW5kbGVycyA9IHt9O1xyXG5cclxuICAgICAgICB0aGlzLm9uSGFuZGxlID0gZnVuY3Rpb24oZSA9IHdpbmRvdy5ldmVudCkge1xyXG4gICAgICAgICAgICBsZXQgJHRoaXMgPSBlLnRhcmdldDtcclxuXHJcbiAgICAgICAgICAgIGlmKCAkdGhpcy5kYXRhc2V0LmlkICkge1xyXG4gICAgICAgICAgICAgICAgbGV0IGluZGV4ID0gJHRoaXMuZGF0YXNldC5pZCA/ICR0aGlzLmRhdGFzZXQuaWQgOiBudWxsO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmKGluZGV4KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGZsYWcgPSBpbmRleCA/ICR0aGlzLmNsYXNzTGlzdC5jb250YWlucygnYWN0aXZlJykgOiBudWxsO1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBmaXJzdE9wZW4gPSB0aGV0LmNoZWNrQWxsQWN0aXZlKCdhY3RpdmUnLCB0aGV0LmdldEF2YWlsYWJsZUxpbmtzKCkpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBpZighZmlyc3RPcGVuICYmICFmbGFnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoZXQudHJpZ2dlcignZmlyc3RPcGVuJywgZS50YXJnZXQsIGluZGV4KTtcclxuICAgICAgICAgICAgICAgICAgICB9ZWxzZSBpZiggZmlyc3RPcGVuICYmICFmbGFnICkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGV0LnRyaWdnZXIoJ2RvdWJsZU9wZW4nLCBlLnRhcmdldCwgaW5kZXgsIGZpcnN0T3Blbik7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIGxldCBjbG9zZWRFbGVtcyA9IHRoZXQuZ2V0QXZhaWxhYmxlTGlua3MoKTtcclxuICAgICAgICAgICAgICAgIGlmKCFjbG9zZWRFbGVtcy5sZW5ndGgpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGV0LnRyaWdnZXIoJ2ZpbmlzaCcpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLm9mZkhhbmRsZSA9IGZ1bmN0aW9uKGUgPSB3aW5kb3cuZXZlbnQpIHtcclxuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgRE9NbWV0aG9kcy5nZXRJZCgnY29udGFpbmVyJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLm9uSGFuZGxlLCB0cnVlKTtcclxuICAgIH1cclxuXHJcbiAgICByZW5kZXIod2lkdGgsIGhlaWdodCkge1xyXG4gICAgICAgIGxldCBsaXN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndWwnKTtcclxuICAgICAgICBsaXN0LmNsYXNzTGlzdC5hZGQoJ2dhbWUtYXBwX19saXN0Jyk7XHJcbiAgICAgICAgbGV0IGNvdW50ZXIgPSAwO1xyXG4gICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCBoZWlnaHQ7IGkrKykge1xyXG4gICAgICAgICAgICBsZXQgcm93ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgICAgIGZvcih2YXIgaiA9IDA7IGogPCB3aWR0aDsgaisrKSB7XHJcbiAgICAgICAgICAgICAgICBjb3VudGVyKys7XHJcbiAgICAgICAgICAgICAgICBsZXQgaXRlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XHJcbiAgICAgICAgICAgICAgICBsZXQgYnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgICAgICAgICBsZXQgaW1nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XHJcblxyXG4gICAgICAgICAgICAgICAgaXRlbS5jbGFzc0xpc3QuYWRkKCdnYW1lLWFwcF9faXRlbScpO1xyXG5cclxuICAgICAgICAgICAgICAgIGJ0bi5jbGFzc0xpc3QuYWRkKCdnYW1lLWFwcF9fbGluaycpO1xyXG4gICAgICAgICAgICAgICAgYnRuLmRhdGFzZXQuaWQgPSBjb3VudGVyO1xyXG5cclxuICAgICAgICAgICAgICAgIGltZy5jbGFzc0xpc3QuYWRkKCdnYW1lLWFwcF9faW1nJyk7XHJcbiAgICAgICAgICAgICAgICBpbWcuc3JjID0gJ2ltYWdlL2RlZmF1bHQucG5nJztcclxuXHJcbiAgICAgICAgICAgICAgICBpdGVtLnN0eWxlLndpZHRoID0gYGNhbGMoMTAwJS8ke3dpZHRofWA7XHJcbiAgICAgICAgICAgICAgICBidG4uYXBwZW5kQ2hpbGQoaW1nKTtcclxuICAgICAgICAgICAgICAgIGl0ZW0uYXBwZW5kQ2hpbGQoYnRuKTtcclxuXHJcbiAgICAgICAgICAgICAgICByb3cuY2xhc3NMaXN0LmFkZCgnZ2FtZS1hcHBfX3JvdycpO1xyXG4gICAgICAgICAgICAgICAgcm93LmFwcGVuZChpdGVtKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBsaXN0LmFwcGVuZENoaWxkKHJvdyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIERPTW1ldGhvZHMuZ2V0SWQoJ2NvbnRhaW5lcicpLmFwcGVuZENoaWxkKGxpc3QpO1xyXG4gICAgfVxyXG5cclxuICAgIG9uKGV2ZW50LCBmbikge1xyXG4gICAgICAgIHRoaXMuaGFuZGxlcnNbZXZlbnRdID0gdGhpcy5oYW5kbGVyc1tldmVudF0gfHwgW107XHJcblxyXG4gICAgICAgIGlmICh0aGlzLmhhbmRsZXJzW2V2ZW50XS5pbmRleE9mKGZuKSA9PT0gLTEpIHtcclxuICAgICAgICAgICAgdGhpcy5oYW5kbGVyc1tldmVudF0ucHVzaChmbik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHRyaWdnZXIoZXZlbnQpIHtcclxuICAgICAgICBpZiAodGhpcy5oYW5kbGVyc1tldmVudF0pIHtcclxuICAgICAgICAgICAgdmFyIGFyZ3MgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5oYW5kbGVyc1tldmVudF0uZm9yRWFjaChmdW5jdGlvbihmbikge1xyXG4gICAgICAgICAgICAgICAgZm4uYXBwbHkobnVsbCwgYXJncyk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBvcGVuSW1nKHRhcmdldCwgc3JjLCBmbGFnKSB7XHJcbiAgICAgICAgdGFyZ2V0LmNoaWxkcmVuWzBdLnNyYyA9IHNyYztcclxuICAgICAgICB0YXJnZXQuY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XHJcbiAgICB9XHJcblxyXG4gICAgY2xvc2VJbWcoKSB7XHJcbiAgICAgICAgbGV0IGFsbEltZyA9IFZpZXcucHJvdG90eXBlLmdldEF2YWlsYWJsZUxpbmtzKCk7XHJcbiAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IGFsbEltZy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBhbGxJbWdbaV0uY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgIGFsbEltZ1tpXS5jaGlsZHJlblswXS5zcmMgPSAnaW1hZ2UvZGVmYXVsdC5wbmcnO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBnZXRBbGxMaW5rcygpIHtcclxuICAgICAgICByZXR1cm4gRE9NbWV0aG9kcy5nZXRDbGFzcygnZ2FtZS1hcHBfX2xpbmsnKTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRBdmFpbGFibGVMaW5rcygpIHtcclxuICAgICAgICBsZXQgYWxsRWxlbXMgPSBET01tZXRob2RzLmdldENsYXNzKCdnYW1lLWFwcF9fbGluaycpO1xyXG4gICAgICAgIGxldCBmaWx0ZXJFbGVtcyA9IFtdO1xyXG4gICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCBhbGxFbGVtcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBpZiggIWFsbEVsZW1zW2ldLmNsYXNzTGlzdC5jb250YWlucygnaXNDbG9zZScpICkge1xyXG4gICAgICAgICAgICAgICAgZmlsdGVyRWxlbXMucHVzaChhbGxFbGVtc1tpXSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGZpbHRlckVsZW1zO1xyXG4gICAgfVxyXG5cclxuICAgIGNoZWNrQWxsQWN0aXZlKGNsYXNzTmFtZSwgZWxlbXMpIHtcclxuICAgICAgICBsZXQgcmVzID0gZmFsc2U7XHJcbiAgICAgICAgZm9yKGxldCBlbCBvZiBlbGVtcykge1xyXG4gICAgICAgICAgIGlmKGVsLmNsYXNzTGlzdC5jb250YWlucyhjbGFzc05hbWUpKSB7XHJcbiAgICAgICAgICAgICAgIHJlcyA9IGVsLmRhdGFzZXQuaWQ7XHJcbiAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHJlcztcclxuICAgIH1cclxuXHJcbiAgICBibG9ja2VkSW1nKGZpcnN0SW5kZXgsIHNlY29uZEluZGV4KSB7XHJcbiAgICAgICAgbGV0IGFsbEJsb2NrcyA9IFZpZXcucHJvdG90eXBlLmdldEFsbExpbmtzKCk7XHJcbiAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IGFsbEJsb2Nrcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBpZiggYWxsQmxvY2tzW2ldLmRhdGFzZXQuaWQgPT0gZmlyc3RJbmRleCB8fCBhbGxCbG9ja3NbaV0uZGF0YXNldC5pZCA9PSBzZWNvbmRJbmRleCApIHtcclxuICAgICAgICAgICAgICAgIGFsbEJsb2Nrc1tpXS5jbGFzc0xpc3QuYWRkKCdpc0Nsb3NlJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmVtb3ZlR2FtZSgpIHtcclxuICAgICAgICBsZXQgZWxlbXMgPSBET01tZXRob2RzLmdldElkKCdjb250YWluZXInKS5jaGlsZHJlbjtcclxuICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgZWxlbXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgZWxlbXNbaV0ucmVtb3ZlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGRpc2FibGVFdmVudCgpIHtcclxuICAgICAgICBET01tZXRob2RzLmdldElkKCdjb250YWluZXInKS5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMub25IYW5kbGUsIHRydWUpO1xyXG4gICAgfVxyXG5cclxuICAgIGVuYWJsZUV2ZW50KCkge1xyXG4gICAgICAgIERPTW1ldGhvZHMuZ2V0SWQoJ2NvbnRhaW5lcicpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5vbkhhbmRsZSwgdHJ1ZSk7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBWaWV3OyJdfQ=="}